stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - review
  - production

image: docker:20.10.16
services:
  - docker:20.10.16-dind

build-job:
  tags:       # This job runs in the build stage, which runs first.
  - builder
  stage: build
  before_script:
  - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - echo "Compiling the code..."
    - echo $CI_ENVIRONMENT_SLUG
    - docker build -f docker-config/app/Dockerfile --pull -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
    - echo "Compile complete."
  only:
    - merge_requests
    - master


unit-test-job:   # This job runs in the test stage.
  image: maven:3
  tags:
  - builder
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Maven test started"
    - mvn test
    - echo "######------COVERAGE-------#######"
    - cat target/site/jacoco/index.html | grep -o '<td class="ctr2" id="c0">.*</td>'

  artifacts:
    reports:
      junit:
        - target/surefire-reports/TEST.*.xml
        - target/surefire/TEST.*.xml
  only:
    - merge_requests
    - master

review-job:
  tags:
  - executor
  stage: review 
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/sh", "-c"]
  stage: deploy
  environment: 
    name: review/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.review.app01.127.0.0.1.nip.io
    on_stop: stop_review
  variables: 
    WORKDIR_PATH: /var/www/review/$CI_ENVIRONMENT_SLUG
    APP_HOSTNAME: $CI_ENVIRONMENT_SLUG.review.app01.127.0.0.1.nip.io
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY
    - APP_IMAGE="app-review:${CI_COMMIT_REF_NAME/\//"-"}"
    - rm -f -- $WORKDIR_PATH/.env
  script:
    - echo $APP_HOSTNAME
    - mkdir -p $WORKDIR_PATH
    - cp -f $env $WORKDIR_PATH/.env
    - printf "\nAPP_HOSTNAME=$APP_HOSTNAME" >> $WORKDIR_PATH/.env
    - printf "\nAPP_IMAGE=$APP_IMAGE" >> $WORKDIR_PATH/.env
    - printf "\nAPP_NAMESPACE=$CI_ENVIRONMENT_SLUG" >> $WORKDIR_PATH/.env
    - cp -f docker-compose.production.yml $WORKDIR_PATH/docker-compose.yml
    - cp -f $dbpassword $WORKDIR_PATH/.dbpassword
    - cd $WORKDIR_PATH
    - docker-compose pull
    - docker-compose --compatibility up --remove-orphans -d
  after_script:
    - docker image prune -f
    - docker logout
    - rm -f -- $WORKDIR_PATH/.dbpassword
  only:
    - merge_requests

stop_review:
  stage: review
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  only: 
    - merge_requests
  tags:
    - executor
  variables: 
    WORKDIR_PATH: /var/www/review/$CI_ENVIRONMENT_SLUG
  script: 
    - cd $WORKDIR_PATH
    - docker-compose down
    - cd ..
    - rm -rf -- $WORKDIR_PATH
  after_script:
    - docker image prune -f

deploy-job:      # This job runs in the deploy stage.
  tags:
  - executor
  stage: production  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - docker-compose up -d
    - echo "Application successfully deployed."
  only:
    - master